/*!
  My Dashboard Page Stylesheet

  Version: 1.0.0


*/
html {
  box-sizing: border-box;
}

*, *::after, *::before {
  box-sizing: inherit;
}

body {
  -webkit-backface-visibility: hidden;
}

.animated {
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.animated.infinite {
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
}

.animated.hinge {
  -webkit-animation-duration: 2s;
  animation-duration: 2s;
}

.animated.bounceIn, .animated.bounceOut {
  -webkit-animation-duration: 0.75s;
  animation-duration: 0.75s;
}

.animated.flipOutX, .animated.flipOutY {
  -webkit-animation-duration: 0.75s;
  animation-duration: 0.75s;
}

@-webkit-keyframes tada {
  0% {
    -webkit-transform: scale(1);
  }
  10%, 20% {
    -webkit-transform: scale(0.9) rotate(-3deg);
  }
  30%, 50%, 70%, 90% {
    -webkit-transform: scale(1.1) rotate(3deg);
  }
  40%, 60%, 80% {
    -webkit-transform: scale(1.1) rotate(-3deg);
  }
  100% {
    -webkit-transform: scale(1) rotate(0);
  }
}

@keyframes tada {
  0% {
    -webkit-transform: scale(1);
  }
  10%, 20% {
    -webkit-transform: scale(0.9) rotate(-3deg);
  }
  30%, 50%, 70%, 90% {
    -webkit-transform: scale(1.1) rotate(3deg);
  }
  40%, 60%, 80% {
    -webkit-transform: scale(1.1) rotate(-3deg);
  }
  100% {
    -webkit-transform: scale(1) rotate(0);
  }
}

@keyframes tada {
  0% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  10%, 20% {
    -webkit-transform: scale(0.9) rotate(-3deg);
            transform: scale(0.9) rotate(-3deg);
  }
  30%, 50%, 70%, 90% {
    -webkit-transform: scale(1.1) rotate(3deg);
            transform: scale(1.1) rotate(3deg);
  }
  40%, 60%, 80% {
    -webkit-transform: scale(1.1) rotate(-3deg);
            transform: scale(1.1) rotate(-3deg);
  }
  100% {
    -webkit-transform: scale(1) rotate(0);
            transform: scale(1) rotate(0);
  }
}

.tada {
  -webkit-animation-name: tada;
  animation-name: tada;
}

@-webkit-keyframes fadeInDown {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-20px);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
  }
}

@keyframes fadeInDown {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-20px);
            transform: translateY(-20px);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

.fadeInDown {
  -webkit-animation-name: fadeInDown;
  animation-name: fadeInDown;
}

/* # HTML5 Reset
---------------------------------------------------------------------------------------------------- */
/* ## Baseline Normalize
--------------------------------------------- */
/* normalize.css v4.1.1 | MIT License | http://necolas.github.io/normalize.css/ */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

body {
  margin: 0;
}

article, aside, details, figcaption, figure, footer, header, main, menu, nav, section, summary {
  display: block;
}

audio, canvas, progress, video {
  display: inline-block;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

progress {
  vertical-align: baseline;
}

template, [hidden] {
  display: none;
}

a {
  background-color: transparent;
  -webkit-text-decoration-skip: objects;
}

a:active, a:hover {
  outline-width: 0;
}

abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  text-decoration: underline dotted;
}

b, strong {
  font-weight: inherit;
}

b, strong {
  font-weight: bolder;
}

dfn {
  font-style: italic;
}

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

mark {
  background-color: #ff0;
  color: #000;
}

small {
  font-size: 80%;
}

sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

img {
  border-style: none;
}

svg:not(:root) {
  overflow: hidden;
}

code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

figure {
  margin: 1em 40px;
}

hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}

button, input, optgroup, select, textarea {
  font: inherit;
  margin: 0;
}

optgroup {
  font-weight: bold;
}

button, input {
  overflow: visible;
}

button, select {
  text-transform: none;
}

button, html [type="button"], [type="reset"], [type="submit"] {
  -webkit-appearance: button;
}

button::-moz-focus-inner, [type="button"]::-moz-focus-inner, [type="reset"]::-moz-focus-inner, [type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring, [type="button"]:-moz-focusring, [type="reset"]:-moz-focusring, [type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

legend {
  box-sizing: border-box;
  color: inherit;
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal;
}

textarea {
  overflow: auto;
}

[type="checkbox"], [type="radio"] {
  box-sizing: border-box;
  padding: 0;
}

[type="number"]::-webkit-inner-spin-button, [type="number"]::-webkit-outer-spin-button {
  height: auto;
}

[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

[type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

/* ## Box Sizing
--------------------------------------------- */
html,
input[type="search"] {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

/* ## Float Clearing
--------------------------------------------- */
.author-box:before,
.clearfix:before,
.entry:before,
.entry-content:before,
.footer-widgets:before,
.nav-primary:before,
.nav-secondary:before,
.pagination:before,
.site-container:before,
.site-footer:before,
.site-header:before,
.site-inner:before,
.widget:before,
.wrap:before {
  content: " ";
  display: table;
}

.author-box:after,
.clearfix:after,
.entry:after,
.entry-content:after,
.footer-widgets:after,
.nav-primary:after,
.nav-secondary:after,
.pagination:after,
.site-container:after,
.site-footer:after,
.site-header:after,
.site-inner:after,
.widget:after,
.wrap:after {
  clear: both;
  content: " ";
  display: table;
}

html {
  font-size: 62.5%;
}

html, body {
  overflow-x: hidden;
}

body {
  background: #fff;
  color: #010204;
  font-family: "Source Sans Pro", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 18px;
  font-size: 1.8rem;
  -webkit-font-smoothing: antialiased;
  font-weight: 400;
  line-height: 1.625;
  overflow-x: hidden;
  margin: 0;
}

*:focus {
  outline: none;
}

*:focus {
  outline: none;
}

a,
button,
input:focus,
input[type="button"],
input[type="reset"],
input[type="submit"],
textarea:focus,
.gallery img {
  -webkit-transition: all 0.1s ease-in-out;
  transition: all 0.1s ease-in-out;
}

::-moz-selection {
  background: #010204;
  color: #fff;
}

::selection {
  background: #010204;
  color: #fff;
}

a {
  color: #cb4b14;
  border-bottom: 1px dotted;
  font-weight: 700;
  text-decoration: none;
  word-wrap: break-word;
}

a img {
  margin-bottom: -4px;
}

a:hover, a:focus {
  color: #010204;
}

p {
  margin: 0 0 24px;
  padding: 0;
}

strong {
  font-weight: 700;
}

pre {
  background: #0c1831;
  color: #adc2eb;
  overflow: scroll;
  padding: 0 20px;
  white-space: pre;
}

cite {
  font-style: italic;
  font-weight: 700;
}

ol,
ul {
  margin: 0;
  padding: 0;
}

.button,
.entry-content a.button,
.content-hide-message a.button,
input[type="submit"] {
  background-color: #1c202c;
  border: 1px solid #1c202c;
  border-bottom: 1px solid #1c202c;
  color: #fff;
  cursor: pointer;
  font-size: 18px;
  font-weight: 400;
  letter-spacing: 1px;
  padding: 16px 24px;
  width: auto;
  border-radius: 0;
}

.button.button--pop,
.entry-content a.button.button--pop,
.content-hide-message a.button.button--pop,
input[type="submit"].button--pop {
  box-shadow: 5px 5px 5px 0px rgba(28, 32, 44, 0.5);
}

.button.button__full-width,
.entry-content a.button.button__full-width,
.content-hide-message a.button.button__full-width,
input[type="submit"].button__full-width {
  width: 100%;
}

.button.orange,
.entry-content a.button.orange,
.content-hide-message a.button.orange,
input[type="submit"].orange {
  background-color: #cb4b14;
  border: 1px solid #cb4b14;
  border-bottom: 1px solid #cb4b14;
  color: #fff;
}

.button.green,
.entry-content a.button.green,
.content-hide-message a.button.green,
input[type="submit"].green {
  background-color: #627f00;
  border: 1px solid #627f00;
  border-bottom: 1px solid #627f00;
}

.button.gray,
.entry-content a.button.gray,
.content-hide-message a.button.gray,
input[type="submit"].gray {
  background-color: #cccccc;
  border: 1px solid #cccccc;
  border-bottom: 1px solid #cccccc;
  color: #1c202c;
}

.button.button__free,
.entry-content a.button.button__free,
.content-hide-message a.button.button__free,
input[type="submit"].button__free {
  background-color: #465573;
  border: 1px solid #465573;
  color: #fff;
}

.button.button__basic_plan,
.entry-content a.button.button__basic_plan,
.content-hide-message a.button.button__basic_plan,
input[type="submit"].button__basic_plan {
  background-color: #f58728;
  border: 1px solid #f58728;
}

.button.button__pro_plan,
.entry-content a.button.button__pro_plan,
.content-hide-message a.button.button__pro_plan,
input[type="submit"].button__pro_plan {
  background-color: #adcd00;
  border: 1px solid #adcd00;
}

.button {
  display: inline-block;
}

button:focus,
input:focus[type="button"],
input:focus[type="reset"],
input:focus[type="submit"],
.button:focus,
.entry-content a.button:focus,
.button__free,
.button__basic_plan,
.button__pro_plan {
  background-color: #fff;
  color: #1c202c;
}

.button:hover,
.entry-content a.button:hover,
input:hover[type="submit"] {
  background-color: #fff;
  border: 1px solid #1c202c;
  color: #1c202c;
}

blockquote {
  color: #010204;
  margin: 40px 0;
  padding: 0;
  border-left: 10px solid #627f00;
  padding-left: 20px;
}

blockquote.blockquote__biggap {
  margin: 80px 0;
}

blockquote.blockquote__right {
  border-left: none;
  padding-left: 0;
  border-right: 10px solid #627f00;
  padding-right: 20px;
}

blockquote p:last-child {
  margin-bottom: 0;
}

.quote-caption {
  margin-bottom: 26px;
}

/* Headings
--------------------------------------------- */
h1,
h2,
h3,
h4,
h5,
h6 {
  color: #1b202d;
  font-family: Lato, Arial, sans-serif;
  font-weight: 700;
  line-height: 1.25;
  margin: 0;
  margin-bottom: 16px;
  padding: 0;
}

h1 {
  font-size: 36px;
}

h2 {
  font-size: 32px;
}

h3 {
  font-size: 28px;
}

h4 {
  font-size: 25px;
}

h5 {
  font-size: 22px;
}

h6 {
  font-size: 20px;
}

/* Objects
--------------------------------------------- */
embed,
iframe,
img,
object,
video,
.wp-caption {
  max-width: 100%;
}

img {
  height: auto;
  width: auto;
  /* IE8 */
}

input[type="text"],
input[type="email"],
textarea {
  background: #fff;
  border: 1px solid #8d99ba;
  color: #5a6b96;
  font-size: 16px;
  padding: 16px;
  width: 100%;
}

:-ms-input-placeholder {
  color: #1b202d;
}

:-moz-placeholder {
  color: #1b202d;
}

::-moz-placeholder {
  color: #1b202d;
}

::-webkit-input-placeholder {
  color: #1b202d;
}

/* Tables
--------------------------------------------- */
table {
  margin-bottom: 40px;
  max-width: 100%;
}

th {
  text-align: left;
}

.table {
  width: 100%;
  margin-bottom: 40px;
}

.table > thead > tr > th,
.table > tbody > tr > th,
.table > tfoot > tr > th,
.table > thead > tr > td,
.table > tbody > tr > td,
.table > tfoot > tr > td {
  padding: 8px;
  line-height: 1.428571429;
  vertical-align: top;
  border-top: 1px solid #c6d4f1;
}

.table > thead > tr > th {
  vertical-align: bottom;
  border-bottom: 2px solid #c6d4f1;
}

.table > caption + thead > tr:first-child > th,
.table > colgroup + thead > tr:first-child > th,
.table > thead:first-child > tr:first-child > th,
.table > caption + thead > tr:first-child > td,
.table > colgroup + thead > tr:first-child > td,
.table > thead:first-child > tr:first-child > td {
  border-top: 0;
}

.table > tbody + tbody {
  border-top: 2px solid #c6d4f1;
}

.table .table {
  background-color: #fff;
}

.table-condensed > thead > tr > th,
.table-condensed > tbody > tr > th,
.table-condensed > tfoot > tr > th,
.table-condensed > thead > tr > td,
.table-condensed > tbody > tr > td,
.table-condensed > tfoot > tr > td {
  padding: 5px;
}

.table-bordered {
  border: 1px solid #c6d4f1;
}

.table-bordered > thead > tr > th,
.table-bordered > tbody > tr > th,
.table-bordered > tfoot > tr > th,
.table-bordered > thead > tr > td,
.table-bordered > tbody > tr > td,
.table-bordered > tfoot > tr > td {
  border: 1px solid #c6d4f1;
}

.table-bordered > thead > tr > th,
.table-bordered > thead > tr > td {
  border-bottom-width: 2px;
}

.table-striped > tbody > tr:nth-child(odd) > td,
.table-striped > tbody > tr:nth-child(odd) > th {
  background-color: #e2eaf8;
}

.table-hover > tbody > tr:hover > td,
.table-hover > tbody > tr:hover > th {
  background-color: #e2eaf8;
}

/*
Accessibility Extras - Taken from the Leiden theme & Genesis Accessible plugin (genesis-accessible.org)
---------------------------------------------------------------------------------------------------- */
/*
* Skiplinks
* Hide visually but not from screen readers
* and keyboard users
--------------------------------------------- */
.more-link {
  position: relative;
}

.screen-reader-text,
.screen-reader-text span,
.search-form label {
  clip: rect(0, 0, 0, 0);
  height: 0;
  position: absolute;
  width: 0;
}

.screen-reader-shortcut {
  clip: rect(0, 0, 0, 0);
  left: 10px;
  position: absolute;
  top: 10px;
}

.screen-reader-shortcut:focus {
  background: #fff;
  clip: auto;
  display: block;
  height: auto;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  width: auto;
  z-index: 100000;
}

.wpacc-genesis-skip-link li,
.genwpacc-genesis-skip-link li {
  height: 0;
  width: 0;
  list-style: none;
}

/* Display outline on focus */
:focus {
  color: #0c1831;
  outline: #6c91da dotted thin;
}

/* WordPress
--------------------------------------------- */
address {
  margin-bottom: 24px;
}

.alignleft {
  float: left;
  text-align: left;
}

.alignright {
  float: right;
  text-align: right;
}

img.alignleft,
.wp-caption.alignleft {
  margin: 0 24px 24px 0;
}

img.alignright,
.wp-caption.alignright {
  margin: 0 0 24px 24px;
}

img.centered,
.aligncenter {
  display: block;
  margin: 0 auto 24px;
}

img.alignnone,
.alignnone {
  margin-bottom: 24px;
}

.wp-caption-text {
  font-size: 14px;
  font-weight: 700;
  margin: 0;
  text-align: center;
}

.wp-caption {
  max-width: 100%;
}

.widget_calendar table td {
  padding: 5px;
}

.hide {
  display: none;
}

.dashboard-widget--container {
  overflow: hidden;
}

.dashboard-widget {
  margin-left: 0;
  margin-bottom: 40px;
  padding: 30px;
  min-height: 300px;
  border: 1px dotted #ccc;
}

.dashboard-widget--header {
  margin: -30px -30px 0;
}

.dashboard-widget--title {
  font-size: 22px;
  font-size: 2.2rem;
  padding: 10px 20px;
  background-color: #ccc;
}

.dashboard-widget--whatsnew ol, .dashboard-widget--whatsnew ul {
  margin: 0;
}

.dashboard-widget--whatsnew ol > li, .dashboard-widget--whatsnew ul > li {
  margin-left: 0;
}

.dashboard-widget--whatsnew .fa {
  margin-right: 12px;
}

@media screen and (min-width: 480px) {
  .dashboard-widget--container {
    max-width: 1140px;
    margin-left: auto;
    margin-right: auto;
    display: -webkit-box;
    display: -moz-box;
    display: box;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-lines: multiple;
    -moz-box-lines: multiple;
    box-lines: multiple;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
  }
  .dashboard-widget--container::after {
    clear: both;
    content: "";
    display: block;
  }
  .dashboard-widget {
    float: left;
    display: block;
    margin-right: 2.35765%;
    width: 48.82117%;
  }
  .dashboard-widget:last-child {
    margin-right: 0;
  }
  .dashboard-widget:nth-child(2n) {
    margin-right: 0;
  }
  .dashboard-widget:nth-child(2n+1) {
    clear: left;
  }
}

/*# sourceMappingURL=data:application/json;base64, */
